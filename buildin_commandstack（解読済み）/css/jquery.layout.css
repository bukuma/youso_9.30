/*
 * Default Layout Theme
 *
 * Created for jquery.layout 
 *
 * Copyright (c) 2010 
 *   Fabrizio Balliano (http://www.fabrizioballiano.net)
 *   Kevin Dalman (http://allpro.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * Last Updated: 2010-02-10
 * NOTE: For best code readability, view this with a fixed-space font and tabs equal to 4-chars
 */

/*
 *	DEFAULT FONT
 *	Just to make demo-pages look better - not actually relevant to Layout!
 */

/*
 *	PANES & CONTENT-DIVs
 */
 /*UIレイアウトのパネルにスタイルを適用するためのもの*/
 .ui-layout-pane { /* all 'panes' */
	/*ui-layout-paneというクラスに適用*/
	background:	#FFF; 
	border:		1px solid #BBB;
	padding:	10px; 
	overflow:	auto;
	/*パネル内のコンテンツがパネルの枠外にはみ出る場合、スクロールバーを表示
	  これにより、パネル内の大きなコンテンツをスクロールして表示*/
	/* DO NOT add scrolling (or padding) to 'panes' that have a content-div,
	   otherwise you may get double-scrollbars - on the pane AND on the content-div
	   - use ui-layout-wrapper class if pane has a content-div
	   - use ui-layout-container if pane has an inner-layout
	*/
	}
	/* (scrolling) content-div inside pane allows for fixed header(s) and/or footer(s) */
	
    /*.ui-layout-contentというクラスにスタイルを適用するためのもの*/	
    .ui-layout-content {
		padding:	10px;
		position:	relative; /* contain floated or positioned elements */
		/*コンテンツ要素の位置を相対的に設定*/
		overflow:	auto; /* add scrolling to content-div */
	    /*コンテンツ要素内のコンテンツが要素の枠外にはみ出る場合、スクロールバーを表示*/
	}

/*
 *	UTILITY CLASSES
 *	Must come AFTER pane-class above so will override
 *	These classes are NOT auto-generated and are NOT used by Layout
 */
/*複数のクラスに対してスタイルを適用する*/
.layout-child-container,
.layout-content-container {
	padding:	0;
	/*コンテナ内の要素の内側の余白を0に*/
	overflow:	hidden;
	/*コンテナ内の要素がコンテナの外側にはみ出るのを防ぎ、スクロールバーを非表示に*/
}
.layout-child-container {
	/*layout-child-containerクラスに対する追加のスタイル*/
	border:		0; /* remove border because inner-layout-panes probably have borders */
    /*内部のレイアウトパネルにボーダーがあるため、これを削除*/
}
.layout-scroll {
	overflow:	auto;
	/*layout-scrollクラスに適用された要素内のコンテンツが要素の枠外にはみ出る場合、スクロールバーを表示*/
}
.layout-hide {
	display:	none;
	/*.layout-hideクラスに適用された要素を非表示に*/
}

/*
 *	RESIZER-BARS
 */
 /*ui-layout-resizerというクラスにスタイルを適用*/
.ui-layout-resizer	{ /* all 'resizer-bars' */
	background:		#DDD;
	border:			1px solid #BBB;
	/*リサイズバーに1ピクセル幅の実線の境界線を設定*/
	border-width:	0;
	/*境界線の幅を0に設定
	  この行は、境界線の幅を元の設定から無効にするためのもので、実質的に境界線を非表示に*/
	}

	/*リサイズバーがリサイズ中とホバー時の2つの状態に対してスタイルを適用するためのもの*/
	.ui-layout-resizer-drag {
	/*リサイズが進行中のときに実際のリサイズバーに適用されるもの*/	
		/* REAL resizer while resize in progress */
	}
	.ui-layout-resizer-hover	{
	/*このスタイルは、リサイズバーがホバー（マウスが重なった状態）したときに適用される*/		
		/* affects both open and closed states */
	}

	/* NOTE: It looks best when 'hover' and 'dragging' are set to the same color,
		otherwise color shifts while dragging when bar can't keep up with mouse */
    /*リサイズバーのさまざまな状態に対して異なるスタイルを適用するためのもの
	  開いた状態でのホバー、ドラッグ中のリサイズバー、およびそのクローンに対するスタイルが指定されている*/
	.ui-layout-resizer-open-hover ,	/* hover-color to 'resize' */
	/*リサイズバーが開いた状態でホバー（マウスが重なった状態）したときに適用される*/
	.ui-layout-resizer-dragging {	/* resizer beging 'dragging' */
	/*リサイズバーがドラッグされているときに適用*/	
		background: #C4E1A4;
	}
	.ui-layout-resizer-dragging {	/* CLONED resizer being dragged */
	/*リサイズバーがドラッグされているときに適用
	  ただし、これはドラッグ中のリサイズバーのクローン（複製品）に適用されるスタイル*/	
		border: 	 1px solid #BBB;
	}

	/* NOTE: Add a 'dragging-limit' color to provide visual feedback when resizer hits min/max size limits */
	.ui-layout-resizer-dragging-limit {	/* CLONED resizer at min or max size-limit */
	/*リサイズバーが最小または最大のサイズ制限に達したときに適用*/	
		background: #E1A4A4; /* red */
	}

	.ui-layout-resizer-closed-hover	{ /* hover-color to 'slide open' */
	/*リサイズバーが閉じた状態でホバー（マウスが重なった状態）したときに適用*/
		background: #EBD5AA;
	}
	.ui-layout-resizer-sliding {	/* resizer when pane is 'slid open' */
	/*ペインがスライドオープンされたときのリサイズバーに適用*/	
		opacity: .10; /* show only a slight shadow */
		/*透明度が非常に低い（.10）の設定になっており、ほとんど表示されないようになる*/
		filter:  alpha(opacity=10);
		}
		.ui-layout-resizer-sliding-hover {	/* sliding resizer - hover */
		/*スライディング状態のリサイズバーにホバー（マウスが重なった状態）したときに適用*/	
			opacity: 1.00; /* on-hover, show the resizer-bar normally */
			/*透明度が1.00に設定され、通常通りの表示に戻る*/
			filter:  alpha(opacity=100);
		}
		/* sliding resizer - add 'outside-border' to resizer on-hover 
		 * this sample illustrates how to target specific panes and states */
		/*ライディング状態のリサイズバーにホバーしたときに、特定の方向（北、南、西、東）の外側のボーダーを追加するために使用される
		  各クラスは、対応する方向にボーダーを追加*/
		.ui-layout-resizer-north-sliding-hover	{ border-bottom-width:	1px; }
		.ui-layout-resizer-south-sliding-hover	{ border-top-width:		1px; }
		.ui-layout-resizer-west-sliding-hover	{ border-right-width:	1px; }
		.ui-layout-resizer-east-sliding-hover	{ border-left-width:	1px; }

/*
 *	TOGGLER-BUTTONS
 */
 /*UIレイアウト内のトグルボタンの外観と動作に関連するスタイルを定義*/
.ui-layout-toggler {
	/*.ui-layout-togglerというクラスに適用*/
	border: 1px solid #BBB; /* match pane-border */
	background-color: #BBB;
	}
	.ui-layout-resizer-hover .ui-layout-toggler {
		/*.ui-layout-resizer-hover内の.ui-layout-togglerに適用*/
		opacity: .60;
		filter:  alpha(opacity=60);
	}
	.ui-layout-toggler-hover , /* need when NOT resizable */
	.ui-layout-resizer-hover .ui-layout-toggler-hover { /* need specificity when IS resizable */
	/*トグルボタンがホバーされたときに適用
	  トグルボタンがリサイズ可能な場合（.ui-layout-resizer-hover内）とそうでない場合の2つのケースをカバー*/	
		background-color: #FC6;
		opacity: 1.00;
		filter:  alpha(opacity=100);
		/*alpha(opacity=100);: Internet Explorer 8以下で透明度を設定*/
	}
	.ui-layout-toggler-north ,
	.ui-layout-toggler-south {
		border-width: 0 1px; /* left/right borders */
		/*トグルボタンが北または南の位置に配置された場合に適用
		  ボーダーを左右に1ピクセル幅の設定*/
	}
	.ui-layout-toggler-west ,
	.ui-layout-toggler-east {
		border-width: 1px 0; /* top/bottom borders */
		/*トグルボタンが北または南の位置に配置された場合に適用
		  ボーダーを上下に1ピクセル幅の設定*/
	}
	/* hide the toggler-button when the pane is 'slid open' */
	.ui-layout-resizer-sliding  .ui-layout-toggler {
	/*ペインがスライドオープンされたときにトグルボタンを非表示に*/
		display: none;
	}
	/*
	 *	style the text we put INSIDE the togglers
	 */
	.ui-layout-toggler .content {
	/*トグルボタン内のテキストに適用*/
		color:			#666;
		font-size:		12px;
		font-weight:	bold;
		width:			100%;
		padding-bottom:	0.35ex; /* to 'vertically center' text inside text-span */
	}

/*
 *	PANE-MASKS
 *	these styles are hard-coded on mask elems, but are also 
 *	included here as !important to ensure will overrides any generic styles
 */
 /*UIレイアウト内のマスク要素に対するスタイルを設定しており、!importantを使用して優先度を高めている
 　マスクは通常、コンテンツを一時的に非表示にするために使用されている*/
.ui-layout-mask {
/*.ui-layout-maskというクラスに適用*/
	border:		none !important;
	padding:	0 !important;
	margin:		0 !important;
	overflow:	hidden !important;
	/* !important;: コンテンツのオーバーフローを非表示にし、!importantを使用して優先度を高める*/
	position:	absolute !important;
	/*要素を絶対位置に配置し、!importantを使用して優先度を高める*/
	opacity:	0 !important;
	/*要素の透明度を0に設定し、!importantを使用して優先度を高める*/
	filter:		Alpha(Opacity="0") !important;
	/*Internet Explorer 8以下で要素の透明度を設定するためのフィルターを適用*/
}
.ui-layout-mask-inside-pane { /* masks always inside pane EXCEPT when pane is an iframe */
/*.ui-layout-mask-inside-paneというクラスに適用*/
	top:		0 !important;
	left:		0 !important;
	width:		100% !important;
	height:		100% !important;
}
/*2つのセレクタ（div.ui-layout-maskとiframe.ui-layout-mask）に対してスタイルを適用するためのもの*/
div.ui-layout-mask {}		/* standard mask for iframes */
/*div.ui-layout-maskセレクタは、div要素のクラスがui-layout-maskである場合にスタイルを適用
  iframe内のコンテンツを覆うためのデザイン要素を設定*/
iframe.ui-layout-mask {}	/* extra mask for objects/applets */
/*iframe.ui-layout-maskセレクタは、iframe要素のクラスがui-layout-maskである場合にスタイルを適用
  iframe以外のコンテンツを覆うためのデザイン要素を設定*/